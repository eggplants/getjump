[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=2",
]

[project]
name = "getjump"
version = "2.7.1"
description = "Get and save images from jump web viewer"
readme = "README.md"
keywords = [
  "cli",
  "downloader",
  "manga",
]
license = { text = "MIT" }
authors = [
  { name = "eggplants", email = "w10776e8w@yahoo.co.jp" },
]
requires-python = ">=3.9,<4"
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Text Processing :: Linguistic",
  "Typing :: Typed",
]
dependencies = [
  "beautifulsoup4>=4.12.3,<5",
  "pillow>=11.1,<12",
  "requests>=2.32.3,<3",
  "rich>=13.9.4,<14",
]
urls.Repository = "https://github.com/eggplants/getjump"
scripts.getjump = "getjump.main:main"
scripts.jget = "getjump.main:main"

[tool.poetry]
requires-poetry = ">=2.0"
packages = [
  { include = "getjump" },
]

[tool.poetry.group.dev.dependencies]
mypy = ">=0.991,<1.15"
pre-commit = ">=2.20,<4.0"
taskipy = "^1.10.3"
types-pillow = ">=9.4.0.17,<11.0.0.0"
types-beautifulsoup4 = "^4.11.6.7"
types-requests = "^2.28.11.15"
pytest = ">=7.2.2,<9.0.0"
pytest-cov = ">=4,<6"

[tool.poetry.requires-plugins]
poetry-plugin-shell = ">=1.0"

[tool.black]
line-length = 120
target-version = [
  'py39',
]

[tool.ruff]
line-length = 120

lint.select = [
  "ALL",
]
lint.ignore = [
  "D",
]
lint.per-file-ignores."main.py" = [
  "T201", # `print` found
]
lint.per-file-ignores."tests/*test_*.py" = [
  "INP001", # File tests/test_*.py is part of an implicit namespace package. Add an __init__.py.
  "S101",   # Use of assert detected
]
lint.mccabe.max-complexity = 18

[tool.mypy]
pretty = true
python_version = "3.9"
show_error_codes = true
strict = true

[tool.pyright]
pythonVersion = "3.9"
typeCheckingMode = "strict"

[tool]

[tool.pytype]
python_version = '3.10'
jobs = '4'
report_errors = true
precise_return = true
protocols = true
strict_import = true

[tool.taskipy.tasks]
test = "pytest --cov=getjump --cov-report=term"
"test:ci" = "task test --cov-report=xml:cov.xml"
lint = "pre-commit run -a"
profile = "python -m cProfile"
